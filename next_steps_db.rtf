{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11440\viewh11760\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
1. cf-ssh to production app via manifest.yml\
2. get production app database url via cf env\
3. in cf-ssh, load database url as env variable\
4. cd tock to folder holding manage.py (should also hold model_serializers.py)\
5. python manage.py shell\
6. import model_serializers which should output the names of models that data is being copied from - KEEP TERMINAL WINDOW OPEN\
7. in new terminal window, cf files to the cf-ssh app to read and tail -n +4 (to cut of garbage in first four lines) > local file\
8. create new service\
9. deploy staging app\
10. cf-ssh using staging_manifest.yml\
11. loaddata into db in the following order:  \
\
Group_data.json\
User_data.json\
Session_data.json	\
UserData_data.json\
Agency_data.json\
AccountingCode_data.json\
ProjectAlert_data.json\
Project_data.json\
ReportingPeriod_data.json\
Timecard_data.json\
TimecardObject_data.json\
\
\
LogEntry_data.json	[FAIL]\
Permission_data.json [FAIL]\
ContentType_data.json [FAIL]}